-# haml-lint: disable ViewLength
- content_for(:meta_og_description) do
  Make votes matter! Swap yours with someone in a constituency where both could count for more. You get to vote for who you really want, and help someone else do the same. Turn tactical voting into a win-win!
.plain-pattern.border-bottom
  .container.api
    %h1 Swap My Vote API

    %p

      Swap My Vote does not have a conventional REST API, but we do
      have a single end point to pre-populate some of the fields that
      a user can choose.

    %p

      This should be ideal for tactical voting campaigns which want to
      encourage voters to follow their recommendations, and indeed we
      would be very happy to see tactical voting sites integrate with
      Swap My Vote.  The below documentation is probably sufficient,
      but if you need assistance then please

      = link_to("get in touch", contact_path) + "."

    %p

      Available parameters are:

    %dl

      %dt
        %code
          willing_party_name
      %dd
        The party that the user is willing to vote for, say
        tactically.

      %dt
        %code
          preferred_party_name
      %dd
        The party that the user would ideally like to vote for, say if
        all votes counted equally nationally.

      %dt
        %code
          constituency_name
      %dd
        The name of the default constituency for the user post-login.
        This is useful if you want to refer a user for tactical voting
        and you know in which constituency they are registered to vote,
        as it will save them manually selecting that constituency.
        The name must match one of the constituencies in the
        %code name
        field of
        = link_to("this data set", constituency_ons_id_dataset_url,
                  target: "_blank") + "."

      %dt
        %code
          constituency_ons_id
      %dd
        The same as for

        %code constituency_name

        above, except that rather than the name, it's the ONS id of
        the constituency listed in the

        %code gss_code

        field of

        = link_to("the data set", constituency_ons_id_dataset_url,
                  target: "_blank") + "."

    %p
      - party1 = Party.all.sample.name

      For example if a tactical voting site wishes to recommend a user
      to vote for (randomly chosen)
      = party1
      candidate in the Aberdeen North
      constituency, they could use this outbound link:

    %p
      - url1 = swap_url(willing_party_name: party1.parameterize.gsub('-', '_'),
                        constituency_name: "Aberdeen North")
      = link_to url1, url1

    %p
      - party2 = Party.all.sample.name

      This one would also work, but rather than specify the tactical vote,
      instead specifies the userâ€™s preferred party (randomly chosen)
      = party2
      \. This time their constituency is York Outer (specified by ONS code).

    %p
      - url2 = swap_url(preferred_party_name: party2.parameterize.gsub('-', '_'),
                        constituency_ons_id: "E14001605")
      = link_to url2, url2

    %p
      Preferred party and willing party can be used singly or in combination.

    %p
      The party names should be lowercased and use underscores instead
      of spaces; here are the available options:

    %ul
      - @parties.each do |party|
        %li
          %code
            = canonical_name(party.name)

    - unless general_election?
      = render partial: "api_constituencies"

    %p

      Note that any parameters set are "sticky" and will apply even
      after the page is reloaded.  They can be "unstuck" by adding

      %code ?clear

      to the end of the URL.
